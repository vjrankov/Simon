//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnonQuest.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SurveyDBEntities : DbContext
    {
        public SurveyDBEntities()
            : base("name=SurveyDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ResponseAnswer> ResponseAnswers { get; set; }
        public virtual DbSet<Survey> Surveys { get; set; }
        public virtual DbSet<SurveyPossibleAnswer> SurveyPossibleAnswers { get; set; }
        public virtual DbSet<SurveyQuestion> SurveyQuestions { get; set; }
        public virtual DbSet<SurveyResponse> SurveyResponses { get; set; }
        public virtual DbSet<SurveySubject> SurveySubjects { get; set; }
    
        public virtual ObjectResult<GetSurveyList_Result> GetSurveyList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSurveyList_Result>("GetSurveyList");
        }
    
        public virtual ObjectResult<GetSurveyPossibleAnswers_Result> GetSurveyPossibleAnswers(Nullable<int> surveyID)
        {
            var surveyIDParameter = surveyID.HasValue ?
                new ObjectParameter("SurveyID", surveyID) :
                new ObjectParameter("SurveyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSurveyPossibleAnswers_Result>("GetSurveyPossibleAnswers", surveyIDParameter);
        }
    
        public virtual ObjectResult<GetSurveyQuestions_Result> GetSurveyQuestions(Nullable<int> surveyID)
        {
            var surveyIDParameter = surveyID.HasValue ?
                new ObjectParameter("SurveyID", surveyID) :
                new ObjectParameter("SurveyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSurveyQuestions_Result>("GetSurveyQuestions", surveyIDParameter);
        }
    
        public virtual ObjectResult<GetSurveyResponses_Result> GetSurveyResponses(Nullable<int> surveyID)
        {
            var surveyIDParameter = surveyID.HasValue ?
                new ObjectParameter("SurveyID", surveyID) :
                new ObjectParameter("SurveyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSurveyResponses_Result>("GetSurveyResponses", surveyIDParameter);
        }
    
        public virtual ObjectResult<GetSurveySubjects_Result> GetSurveySubjects(Nullable<int> surveyID)
        {
            var surveyIDParameter = surveyID.HasValue ?
                new ObjectParameter("SurveyID", surveyID) :
                new ObjectParameter("SurveyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSurveySubjects_Result>("GetSurveySubjects", surveyIDParameter);
        }
    }
}
