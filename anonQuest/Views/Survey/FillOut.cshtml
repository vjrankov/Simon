@model AnonQuest.Models.Survey

@{
    ViewBag.Title = "Survey";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .my-anchor {
        position: relative;
    }

    .field-validation-error {
        background-color: white;
        color: red;
        border-radius: 4px;
        border: solid 1px #333;
        display: block;
        position: absolute;
        text-align: left;
        width: 300px;
    }
</style>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Html.BeginForm("Submit", "Survey", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <section class="section section-order">
        <div class="form-order">
            <div class="form-body">
                <div class="tabs">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-section-secondary">
                        <div class="shell-small">
                            <div class="tabs-body">
                                <div class="form-row">
                                    <h2>@Html.Raw(Model.SurveyTitle)</h2>
                                </div>
                                <div class="form-row">
                                    <h3>@Html.Raw(Model.SurveyDescription)</h3>
                                </div>
                            </div>
                            <div class="form-row"></div>
                            <div class="form-row"></div>
                            @for (int i = 0, k = 0, l = 1; i < Model.Subjects.Count; i++)
                            {
                                if (Model.Subjects.Count > 1)
                                {
                                    <div class="form-row">
                                        <header class="section-head">
                                            @Html.HiddenFor(m => m.Subjects[i].SubjectID)
                                            <h4> @Html.Raw(Model.Subjects[i].Title)</h4>
                                            <hr />
                                        </header>
                                    </div>
                                }
                                for (int j = 0; j < Model.Subjects[i].Questions.Count; j++)
                                {
                                    <div class="form-row">
                                        <div class="form-col form-col-size1">
                                            @Html.HiddenFor(m => m.Subjects[i].Questions[j].QuestionID)
                                            <span class="label">
                                                <strong>@Html.Label(l.ToString()).</strong>
                                                @Html.Raw(Model.Subjects[i].Questions[j].QuestionText)
                                            </span>
                                        </div>
                                        <div class="form-col form-col-size2">
                                            <div>
                                                @if (Model.Subjects[i].Questions[j].PossibleAnswers.Count == 1)
                                                {
                                                    <div class="checkbox">
                                                        @Html.CheckBoxFor(m => m.Answers[k].Selected) @Html.Raw(Model.Subjects[i].Questions[j].PossibleAnswers[0].AnswerText)
                                                    </div>
                                                }
                                                else
                                                {

                                                    foreach (var answer in Model.Subjects[i].Questions[j].PossibleAnswers)
                                                    {
                                                        if (Model.Subjects[i].Questions[j].PossibleAnswers.Count == 2)
                                                        {
                                                            <span class="radio">
                                                                @Html.RadioButtonFor(m => m.Answers[k].SelectedAnswer, answer.SeqNo, new { id = Model.Answers[k].QuestionID }) @Html.Raw(answer.AnswerText)
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <div class="radio">
                                                                @Html.RadioButtonFor(m => m.Answers[k].SelectedAnswer, answer.SeqNo, new { id = Model.Answers[k].QuestionID }) @Html.Raw(answer.AnswerText)
                                                            </div>
                                                        }
                                                    }
                                                    @Html.ValidationMessageFor(m => m.Answers[k].SelectedAnswer)
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    k++;
                                    l++;
                                }
                            }
                        </div>
                        <div class="form-row"></div>
                        <div class="form-row"></div>
                        <div class="form-row"></div>
                        <div class="tabs-body">
                            <div class="form-section-secondary">
                                <div class="shell-small">
                                    <div class="form-section-head">
                                        <h3>Please provide your contact information</h3>
                                        <hr />
                                    </div>
                                    <div class="form-row">
                                        <label for="field-name" class="form-label">Full Name<span class="form-asterisk">*</span></label>

                                        <div class="form-controls">
                                            @Html.EditorFor(model => model.ContactInfo.FullName, new { htmlAttributes = new { @class = "field", @placeholder = "Enter name" } })
                                            @Html.ValidationMessageFor(model => model.ContactInfo.FullName, "", new { @class = "text-danger-lengthy errorMessage" })
                                        </div><!-- /.form-controls -->
                                    </div><!-- /.form-row -->

                                    <div class="form-row">
                                        <label for="field-company" class="form-label">Company<span class="form-asterisk">*</span></label>

                                        <div class="form-controls">
                                            @Html.EditorFor(model => model.ContactInfo.Company, new { htmlAttributes = new { @class = "field", @placeholder = "Enter company" } })
                                            @Html.ValidationMessageFor(model => model.ContactInfo.Company, "", new { @class = "text-danger-lengthy errorMessage" })
                                        </div><!-- /.form-controls -->
                                    </div><!-- /.form-row -->
                                    <div class="form-row">
                                        <label for="field-email" class="form-label">Email Address<span class="form-asterisk">*</span></label>

                                        <div class="form-controls">
                                            @Html.EditorFor(model => model.ContactInfo.Email, new { htmlAttributes = new { @class = "field", @placeholder = "Enter email address" } })
                                            @Html.ValidationMessageFor(model => model.ContactInfo.Email, "", new { @class = "text-danger-lengthy errorMessage" })
                                        </div><!-- /.form-controls -->
                                    </div><!-- /.form-row -->
                                    <div class="form-row"></div>
                                    <div class="form-subject">
                                        <input id="btnSubmit" name="ActionSubmit" type="submit" value="Submit" class="button-pre">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
